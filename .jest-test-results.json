{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":7,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":8,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":1,"total":1,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1575567974126,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Table"],"failureMessages":[],"fullName":"Table should render correctly","location":null,"status":"passed","title":"should render correctly"},{"ancestorTitles":["Table"],"failureMessages":[],"fullName":"Table should have table component","location":null,"status":"passed","title":"should have table component"},{"ancestorTitles":["Table"],"failureMessages":[],"fullName":"Table should have thead component","location":null,"status":"passed","title":"should have thead component"},{"ancestorTitles":["Table"],"failureMessages":[],"fullName":"Table should have tbody component","location":null,"status":"passed","title":"should have tbody component"},{"ancestorTitles":["Table"],"failureMessages":[],"fullName":"Table should have th is equal to number of columns","location":null,"status":"passed","title":"should have th is equal to number of columns"},{"ancestorTitles":["Table"],"failureMessages":[],"fullName":"Table should have tr is equal to number of data rows","location":null,"status":"passed","title":"should have tr is equal to number of data rows"},{"ancestorTitles":["Table"],"failureMessages":[],"fullName":"Table should loop through each row and check the content","location":null,"status":"passed","title":"should loop through each row and check the content"},{"ancestorTitles":["Table"],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"header\"\u001b[39m\nReceived: \u001b[31m{}\u001b[39m\n    at Object.toEqual (C:\\Users\\user\\Documents\\projects\\atomic-react-components\\lib\\components\\molecules\\Table\\tests\\Table.test.js:85:34)\n    at Object.asyncJestTest (C:\\Users\\user\\Documents\\projects\\atomic-react-components\\node_modules\\jest-jasmine2\\build\\jasmineAsyncInstall.js:102:37)\n    at C:\\Users\\user\\Documents\\projects\\atomic-react-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (C:\\Users\\user\\Documents\\projects\\atomic-react-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:26:19)\n    at C:\\Users\\user\\Documents\\projects\\atomic-react-components\\node_modules\\jest-jasmine2\\build\\queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)"],"fullName":"Table th should have intent props header","location":null,"status":"failed","title":"th should have intent props header"}],"endTime":1575567984644,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mTable › th should have intent props header\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"header\"\u001b[39m\n    Received: \u001b[31m{}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 83 | \u001b[39m    }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m    \u001b[36mconst\u001b[39m tableColumnComponent \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mTable\u001b[39m\u001b[33m.\u001b[39m\u001b[33mColumn\u001b[39m {\u001b[33m...\u001b[39mprops} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 85 | \u001b[39m    expect(tableColumnComponent)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'header'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                 \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 86 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[2m\u001b[0m\u001b[36mlib/components/molecules/Table/tests/Table.test.js\u001b[39m\u001b[0m\u001b[2m:85:34)\u001b[2m\u001b[22m\n","name":"C:\\Users\\user\\Documents\\projects\\atomic-react-components\\lib\\components\\molecules\\Table\\tests\\Table.test.js","startTime":1575567978870,"status":"failed","summary":""}],"wasInterrupted":false,"coverageMap":{}}